// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: accounts.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAccountWithMonnify = `-- name: CreateAccountWithMonnify :one
INSERT INTO accounts (
    user_id,
    account_number,
    account_type,
    monnify_customer_ref,
    virtual_account_bank
)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, user_id, account_number, account_type, balance, currency, created_at, updated_at, virtual_account_bank, monnify_customer_ref
`

type CreateAccountWithMonnifyParams struct {
	UserID             pgtype.UUID `json:"user_id"`
	AccountNumber      string      `json:"account_number"`
	AccountType        string      `json:"account_type"`
	MonnifyCustomerRef pgtype.Text `json:"monnify_customer_ref"`
	VirtualAccountBank pgtype.Text `json:"virtual_account_bank"`
}

func (q *Queries) CreateAccountWithMonnify(ctx context.Context, arg CreateAccountWithMonnifyParams) (Account, error) {
	row := q.db.QueryRow(ctx, createAccountWithMonnify,
		arg.UserID,
		arg.AccountNumber,
		arg.AccountType,
		arg.MonnifyCustomerRef,
		arg.VirtualAccountBank,
	)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.AccountNumber,
		&i.AccountType,
		&i.Balance,
		&i.Currency,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.VirtualAccountBank,
		&i.MonnifyCustomerRef,
	)
	return i, err
}
